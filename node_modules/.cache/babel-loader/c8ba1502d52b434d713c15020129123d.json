{"ast":null,"code":"/* MIT license */\nvar cssKeywords = require('color-name'); // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\n\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  if (cssKeywords.hasOwnProperty(key)) {\n    reverseKeywords[cssKeywords[key]] = key;\n  }\n}\n\nvar convert = module.exports = {\n  rgb: {\n    channels: 3,\n    labels: 'rgb'\n  },\n  hsl: {\n    channels: 3,\n    labels: 'hsl'\n  },\n  hsv: {\n    channels: 3,\n    labels: 'hsv'\n  },\n  hwb: {\n    channels: 3,\n    labels: 'hwb'\n  },\n  cmyk: {\n    channels: 4,\n    labels: 'cmyk'\n  },\n  xyz: {\n    channels: 3,\n    labels: 'xyz'\n  },\n  lab: {\n    channels: 3,\n    labels: 'lab'\n  },\n  lch: {\n    channels: 3,\n    labels: 'lch'\n  },\n  hex: {\n    channels: 1,\n    labels: ['hex']\n  },\n  keyword: {\n    channels: 1,\n    labels: ['keyword']\n  },\n  ansi16: {\n    channels: 1,\n    labels: ['ansi16']\n  },\n  ansi256: {\n    channels: 1,\n    labels: ['ansi256']\n  },\n  hcg: {\n    channels: 3,\n    labels: ['h', 'c', 'g']\n  },\n  apple: {\n    channels: 3,\n    labels: ['r16', 'g16', 'b16']\n  },\n  gray: {\n    channels: 1,\n    labels: ['gray']\n  }\n}; // hide .channels and .labels properties\n\nfor (var model in convert) {\n  if (convert.hasOwnProperty(model)) {\n    if (!('channels' in convert[model])) {\n      throw new Error('missing channels property: ' + model);\n    }\n\n    if (!('labels' in convert[model])) {\n      throw new Error('missing channel labels property: ' + model);\n    }\n\n    if (convert[model].labels.length !== convert[model].channels) {\n      throw new Error('channel and label counts mismatch: ' + model);\n    }\n\n    var channels = convert[model].channels;\n    var labels = convert[model].labels;\n    delete convert[model].channels;\n    delete convert[model].labels;\n    Object.defineProperty(convert[model], 'channels', {\n      value: channels\n    });\n    Object.defineProperty(convert[model], 'labels', {\n      value: labels\n    });\n  }\n}\n\nconvert.rgb.hsl = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var min = Math.min(r, g, b);\n  var max = Math.max(r, g, b);\n  var delta = max - min;\n  var h;\n  var s;\n  var l;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n  var rdif;\n  var gdif;\n  var bdif;\n  var h;\n  var s;\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var v = Math.max(r, g, b);\n  var diff = v - Math.min(r, g, b);\n\n  var diffc = function (c) {\n    return (v - c) / 6 / diff + 1 / 2;\n  };\n\n  if (diff === 0) {\n    h = s = 0;\n  } else {\n    s = diff / v;\n    rdif = diffc(r);\n    gdif = diffc(g);\n    bdif = diffc(b);\n\n    if (r === v) {\n      h = bdif - gdif;\n    } else if (g === v) {\n      h = 1 / 3 + rdif - bdif;\n    } else if (b === v) {\n      h = 2 / 3 + gdif - rdif;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return [h * 360, s * 100, v * 100];\n};\n\nconvert.rgb.hwb = function (rgb) {\n  var r = rgb[0];\n  var g = rgb[1];\n  var b = rgb[2];\n  var h = convert.rgb.hsl(rgb)[0];\n  var w = 1 / 255 * Math.min(r, Math.min(g, b));\n  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var c;\n  var m;\n  var y;\n  var k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n};\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\n\n\nfunction comparativeDistance(x, y) {\n  return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);\n}\n\nconvert.rgb.keyword = function (rgb) {\n  var reversed = reverseKeywords[rgb];\n\n  if (reversed) {\n    return reversed;\n  }\n\n  var currentClosestDistance = Infinity;\n  var currentClosestKeyword;\n\n  for (var keyword in cssKeywords) {\n    if (cssKeywords.hasOwnProperty(keyword)) {\n      var value = cssKeywords[keyword]; // Compute comparative distance\n\n      var distance = comparativeDistance(rgb, value); // Check if its less, if so set as closest\n\n      if (distance < currentClosestDistance) {\n        currentClosestDistance = distance;\n        currentClosestKeyword = keyword;\n      }\n    }\n  }\n\n  return currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n  return cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n  var xyz = convert.rgb.xyz(rgb);\n  var x = xyz[0];\n  var y = xyz[1];\n  var z = xyz[2];\n  var l;\n  var a;\n  var b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n  var h = hsl[0] / 360;\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var t1;\n  var t2;\n  var t3;\n  var rgb;\n  var val;\n\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n\n    if (t3 < 0) {\n      t3++;\n    }\n\n    if (t3 > 1) {\n      t3--;\n    }\n\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n  var h = hsl[0];\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var smin = s;\n  var lmin = Math.max(l, 0.01);\n  var sv;\n  var v;\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (l + s) / 2;\n  sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n  var h = hsv[0] / 60;\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h);\n  var p = 255 * v * (1 - s);\n  var q = 255 * v * (1 - s * f);\n  var t = 255 * v * (1 - s * (1 - f));\n  v *= 255;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n};\n\nconvert.hsv.hsl = function (hsv) {\n  var h = hsv[0];\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var vmin = Math.max(v, 0.01);\n  var lmin;\n  var sl;\n  var l;\n  l = (2 - s) * v;\n  lmin = (2 - s) * vmin;\n  sl = s * vmin;\n  sl /= lmin <= 1 ? lmin : 2 - lmin;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}; // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nconvert.hwb.rgb = function (hwb) {\n  var h = hwb[0] / 360;\n  var wh = hwb[1] / 100;\n  var bl = hwb[2] / 100;\n  var ratio = wh + bl;\n  var i;\n  var v;\n  var f;\n  var n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) !== 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  var r;\n  var g;\n  var b;\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n  var c = cmyk[0] / 100;\n  var m = cmyk[1] / 100;\n  var y = cmyk[2] / 100;\n  var k = cmyk[3] / 100;\n  var r;\n  var g;\n  var b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n  var x = xyz[0] / 100;\n  var y = xyz[1] / 100;\n  var z = xyz[2] / 100;\n  var r;\n  var g;\n  var b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n  var x = xyz[0];\n  var y = xyz[1];\n  var z = xyz[2];\n  var l;\n  var a;\n  var b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n  var l = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var x;\n  var y;\n  var z;\n  y = (l + 16) / 116;\n  x = a / 500 + y;\n  z = y - b / 200;\n  var y2 = Math.pow(y, 3);\n  var x2 = Math.pow(x, 3);\n  var z2 = Math.pow(z, 3);\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n  x *= 95.047;\n  y *= 100;\n  z *= 108.883;\n  return [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n  var l = lab[0];\n  var a = lab[1];\n  var b = lab[2];\n  var hr;\n  var h;\n  var c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n  var l = lch[0];\n  var c = lch[1];\n  var h = lch[2];\n  var a;\n  var b;\n  var hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n  var r = args[0];\n  var g = args[1];\n  var b = args[2];\n  var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n  value = Math.round(value / 50);\n\n  if (value === 0) {\n    return 30;\n  }\n\n  var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n\n  if (value === 2) {\n    ansi += 60;\n  }\n\n  return ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n  // optimization here; we already know the value and don't need to get\n  // it converted for us.\n  return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n  var r = args[0];\n  var g = args[1];\n  var b = args[2]; // we use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n\n  if (r === g && g === b) {\n    if (r < 8) {\n      return 16;\n    }\n\n    if (r > 248) {\n      return 231;\n    }\n\n    return Math.round((r - 8) / 247 * 24) + 232;\n  }\n\n  var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n  return ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n  var color = args % 10; // handle greyscale\n\n  if (color === 0 || color === 7) {\n    if (args > 50) {\n      color += 3.5;\n    }\n\n    color = color / 10.5 * 255;\n    return [color, color, color];\n  }\n\n  var mult = (~~(args > 50) + 1) * 0.5;\n  var r = (color & 1) * mult * 255;\n  var g = (color >> 1 & 1) * mult * 255;\n  var b = (color >> 2 & 1) * mult * 255;\n  return [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n  // handle greyscale\n  if (args >= 232) {\n    var c = (args - 232) * 10 + 8;\n    return [c, c, c];\n  }\n\n  args -= 16;\n  var rem;\n  var r = Math.floor(args / 36) / 5 * 255;\n  var g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n  var b = rem % 6 / 5 * 255;\n  return [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n  var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n  var string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n  var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\n  if (!match) {\n    return [0, 0, 0];\n  }\n\n  var colorString = match[0];\n\n  if (match[0].length === 3) {\n    colorString = colorString.split('').map(function (char) {\n      return char + char;\n    }).join('');\n  }\n\n  var integer = parseInt(colorString, 16);\n  var r = integer >> 16 & 0xFF;\n  var g = integer >> 8 & 0xFF;\n  var b = integer & 0xFF;\n  return [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var max = Math.max(Math.max(r, g), b);\n  var min = Math.min(Math.min(r, g), b);\n  var chroma = max - min;\n  var grayscale;\n  var hue;\n\n  if (chroma < 1) {\n    grayscale = min / (1 - chroma);\n  } else {\n    grayscale = 0;\n  }\n\n  if (chroma <= 0) {\n    hue = 0;\n  } else if (max === r) {\n    hue = (g - b) / chroma % 6;\n  } else if (max === g) {\n    hue = 2 + (b - r) / chroma;\n  } else {\n    hue = 4 + (r - g) / chroma + 4;\n  }\n\n  hue /= 6;\n  hue %= 1;\n  return [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n  var s = hsl[1] / 100;\n  var l = hsl[2] / 100;\n  var c = 1;\n  var f = 0;\n\n  if (l < 0.5) {\n    c = 2.0 * s * l;\n  } else {\n    c = 2.0 * s * (1.0 - l);\n  }\n\n  if (c < 1.0) {\n    f = (l - 0.5 * c) / (1.0 - c);\n  }\n\n  return [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n  var s = hsv[1] / 100;\n  var v = hsv[2] / 100;\n  var c = s * v;\n  var f = 0;\n\n  if (c < 1.0) {\n    f = (v - c) / (1 - c);\n  }\n\n  return [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n  var h = hcg[0] / 360;\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n\n  if (c === 0.0) {\n    return [g * 255, g * 255, g * 255];\n  }\n\n  var pure = [0, 0, 0];\n  var hi = h % 1 * 6;\n  var v = hi % 1;\n  var w = 1 - v;\n  var mg = 0;\n\n  switch (Math.floor(hi)) {\n    case 0:\n      pure[0] = 1;\n      pure[1] = v;\n      pure[2] = 0;\n      break;\n\n    case 1:\n      pure[0] = w;\n      pure[1] = 1;\n      pure[2] = 0;\n      break;\n\n    case 2:\n      pure[0] = 0;\n      pure[1] = 1;\n      pure[2] = v;\n      break;\n\n    case 3:\n      pure[0] = 0;\n      pure[1] = w;\n      pure[2] = 1;\n      break;\n\n    case 4:\n      pure[0] = v;\n      pure[1] = 0;\n      pure[2] = 1;\n      break;\n\n    default:\n      pure[0] = 1;\n      pure[1] = 0;\n      pure[2] = w;\n  }\n\n  mg = (1.0 - c) * g;\n  return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n};\n\nconvert.hcg.hsv = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var v = c + g * (1.0 - c);\n  var f = 0;\n\n  if (v > 0.0) {\n    f = c / v;\n  }\n\n  return [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var l = g * (1.0 - c) + 0.5 * c;\n  var s = 0;\n\n  if (l > 0.0 && l < 0.5) {\n    s = c / (2 * l);\n  } else if (l >= 0.5 && l < 1.0) {\n    s = c / (2 * (1 - l));\n  }\n\n  return [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n  var c = hcg[1] / 100;\n  var g = hcg[2] / 100;\n  var v = c + g * (1.0 - c);\n  return [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n  var w = hwb[1] / 100;\n  var b = hwb[2] / 100;\n  var v = 1 - b;\n  var c = v - w;\n  var g = 0;\n\n  if (c < 1) {\n    g = (v - c) / (1 - c);\n  }\n\n  return [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n  return [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n  return [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n  return [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n  return [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n  var val = Math.round(gray[0] / 100 * 255) & 0xFF;\n  var integer = (val << 16) + (val << 8) + val;\n  var string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n  var val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n  return [val / 255 * 100];\n};","map":{"version":3,"sources":["C:/Users/jlpan/RPortfolio/react-portfolio/node_modules/color-convert/conversions.js"],"names":["cssKeywords","require","reverseKeywords","key","hasOwnProperty","convert","module","exports","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","Error","length","Object","defineProperty","value","r","g","b","min","Math","max","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","m","y","k","comparativeDistance","x","pow","reversed","currentClosestDistance","Infinity","currentClosestKeyword","distance","z","a","t1","t2","t3","val","i","smin","lmin","sv","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","args","arguments","round","ansi","color","mult","rem","integer","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","parseInt","chroma","grayscale","hue","pure","mg"],"mappings":"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","sourcesContent":["/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n"]},"metadata":{},"sourceType":"script"}