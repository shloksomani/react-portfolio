{"ast":null,"code":"/*\n Copyright (C) Federico Zivolo 2019\n Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).\n */\nvar e = 'undefined' != typeof window && 'undefined' != typeof document;\nconst t = ['Edge', 'Trident', 'Firefox'];\nlet o = 0;\n\nfor (let n = 0; n < t.length; n += 1) if (e && 0 <= navigator.userAgent.indexOf(t[n])) {\n  o = 1;\n  break;\n}\n\nfunction n(e) {\n  let t = !1;\n  return () => {\n    t || (t = !0, window.Promise.resolve().then(() => {\n      t = !1, e();\n    }));\n  };\n}\n\nfunction i(e) {\n  let t = !1;\n  return () => {\n    t || (t = !0, setTimeout(() => {\n      t = !1, e();\n    }, o));\n  };\n}\n\nconst r = e && window.Promise;\nvar p = r ? n : i;\n\nfunction d(e) {\n  return e && '[object Function]' === {}.toString.call(e);\n}\n\nfunction s(e, t) {\n  if (1 !== e.nodeType) return [];\n  const o = e.ownerDocument.defaultView,\n        n = o.getComputedStyle(e, null);\n  return t ? n[t] : n;\n}\n\nfunction f(e) {\n  return 'HTML' === e.nodeName ? e : e.parentNode || e.host;\n}\n\nfunction a(e) {\n  if (!e) return document.body;\n\n  switch (e.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return e.ownerDocument.body;\n\n    case '#document':\n      return e.body;\n  }\n\n  const _s = s(e),\n        t = _s.overflow,\n        o = _s.overflowX,\n        n = _s.overflowY;\n\n  return /(auto|scroll|overlay)/.test(t + n + o) ? e : a(f(e));\n}\n\nconst l = e && !!(window.MSInputMethodContext && document.documentMode),\n      m = e && /MSIE 10/.test(navigator.userAgent);\n\nfunction h(e) {\n  return 11 === e ? l : 10 === e ? m : l || m;\n}\n\nfunction c(e) {\n  if (!e) return document.documentElement;\n  const t = h(10) ? document.body : null;\n  let o = e.offsetParent || null;\n\n  for (; o === t && e.nextElementSibling;) o = (e = e.nextElementSibling).offsetParent;\n\n  const n = o && o.nodeName;\n  return n && 'BODY' !== n && 'HTML' !== n ? -1 !== ['TH', 'TD', 'TABLE'].indexOf(o.nodeName) && 'static' === s(o, 'position') ? c(o) : o : e ? e.ownerDocument.documentElement : document.documentElement;\n}\n\nfunction u(e) {\n  const t = e.nodeName;\n  return 'BODY' !== t && ('HTML' === t || c(e.firstElementChild) === e);\n}\n\nfunction g(e) {\n  return null === e.parentNode ? e : g(e.parentNode);\n}\n\nfunction b(e, t) {\n  if (!e || !e.nodeType || !t || !t.nodeType) return document.documentElement;\n  const o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,\n        n = o ? e : t,\n        i = o ? t : e,\n        r = document.createRange();\n  r.setStart(n, 0), r.setEnd(i, 0);\n  const p = r.commonAncestorContainer;\n  if (e !== p && t !== p || n.contains(i)) return u(p) ? p : c(p);\n  const d = g(e);\n  return d.host ? b(d.host, t) : b(e, g(t).host);\n}\n\nfunction w(e, t = 'top') {\n  const o = 'top' === t ? 'scrollTop' : 'scrollLeft',\n        n = e.nodeName;\n\n  if ('BODY' === n || 'HTML' === n) {\n    const t = e.ownerDocument.documentElement,\n          n = e.ownerDocument.scrollingElement || t;\n    return n[o];\n  }\n\n  return e[o];\n}\n\nfunction y(e, t, o = !1) {\n  const n = w(t, 'top'),\n        i = w(t, 'left'),\n        r = o ? -1 : 1;\n  return e.top += n * r, e.bottom += n * r, e.left += i * r, e.right += i * r, e;\n}\n\nfunction E(e, t) {\n  const o = 'x' === t ? 'Left' : 'Top',\n        n = 'Left' == o ? 'Right' : 'Bottom';\n  return parseFloat(e[`border${o}Width`], 10) + parseFloat(e[`border${n}Width`], 10);\n}\n\nfunction x(e, t, o, n) {\n  return Math.max(t[`offset${e}`], t[`scroll${e}`], o[`client${e}`], o[`offset${e}`], o[`scroll${e}`], h(10) ? parseInt(o[`offset${e}`]) + parseInt(n[`margin${'Height' === e ? 'Top' : 'Left'}`]) + parseInt(n[`margin${'Height' === e ? 'Bottom' : 'Right'}`]) : 0);\n}\n\nfunction v(e) {\n  const t = e.body,\n        o = e.documentElement,\n        n = h(10) && getComputedStyle(o);\n  return {\n    height: x('Height', t, o, n),\n    width: x('Width', t, o, n)\n  };\n}\n\nvar O = Object.assign || function (e) {\n  for (var t, o = 1; o < arguments.length; o++) for (var n in t = arguments[o], t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n\n  return e;\n};\n\nfunction L(e) {\n  return O({}, e, {\n    right: e.left + e.width,\n    bottom: e.top + e.height\n  });\n}\n\nfunction S(e) {\n  let t = {};\n\n  try {\n    if (h(10)) {\n      t = e.getBoundingClientRect();\n      const o = w(e, 'top'),\n            n = w(e, 'left');\n      t.top += o, t.left += n, t.bottom += o, t.right += n;\n    } else t = e.getBoundingClientRect();\n  } catch (t) {}\n\n  const o = {\n    left: t.left,\n    top: t.top,\n    width: t.right - t.left,\n    height: t.bottom - t.top\n  },\n        n = 'HTML' === e.nodeName ? v(e.ownerDocument) : {},\n        i = n.width || e.clientWidth || o.right - o.left,\n        r = n.height || e.clientHeight || o.bottom - o.top;\n  let p = e.offsetWidth - i,\n      d = e.offsetHeight - r;\n\n  if (p || d) {\n    const t = s(e);\n    p -= E(t, 'x'), d -= E(t, 'y'), o.width -= p, o.height -= d;\n  }\n\n  return L(o);\n}\n\nfunction T(e, t, o = !1) {\n  var n = Math.max;\n  const i = h(10),\n        r = 'HTML' === t.nodeName,\n        p = S(e),\n        d = S(t),\n        f = a(e),\n        l = s(t),\n        m = parseFloat(l.borderTopWidth, 10),\n        c = parseFloat(l.borderLeftWidth, 10);\n  o && r && (d.top = n(d.top, 0), d.left = n(d.left, 0));\n  let u = L({\n    top: p.top - d.top - m,\n    left: p.left - d.left - c,\n    width: p.width,\n    height: p.height\n  });\n\n  if (u.marginTop = 0, u.marginLeft = 0, !i && r) {\n    const e = parseFloat(l.marginTop, 10),\n          t = parseFloat(l.marginLeft, 10);\n    u.top -= m - e, u.bottom -= m - e, u.left -= c - t, u.right -= c - t, u.marginTop = e, u.marginLeft = t;\n  }\n\n  return (i && !o ? t.contains(f) : t === f && 'BODY' !== f.nodeName) && (u = y(u, t)), u;\n}\n\nfunction D(e, t = !1) {\n  var o = Math.max;\n  const n = e.ownerDocument.documentElement,\n        i = T(e, n),\n        r = o(n.clientWidth, window.innerWidth || 0),\n        p = o(n.clientHeight, window.innerHeight || 0),\n        d = t ? 0 : w(n),\n        s = t ? 0 : w(n, 'left'),\n        f = {\n    top: d - i.top + i.marginTop,\n    left: s - i.left + i.marginLeft,\n    width: r,\n    height: p\n  };\n  return L(f);\n}\n\nfunction C(e) {\n  const t = e.nodeName;\n  if ('BODY' === t || 'HTML' === t) return !1;\n  if ('fixed' === s(e, 'position')) return !0;\n  const o = f(e);\n  return !!o && C(o);\n}\n\nfunction N(e) {\n  if (!e || !e.parentElement || h()) return document.documentElement;\n  let t = e.parentElement;\n\n  for (; t && 'none' === s(t, 'transform');) t = t.parentElement;\n\n  return t || document.documentElement;\n}\n\nfunction P(e, t, o, n, i = !1) {\n  let r = {\n    top: 0,\n    left: 0\n  };\n  const p = i ? N(e) : b(e, t);\n  if ('viewport' === n) r = D(p, i);else {\n    let o;\n    'scrollParent' === n ? (o = a(f(t)), 'BODY' === o.nodeName && (o = e.ownerDocument.documentElement)) : 'window' === n ? o = e.ownerDocument.documentElement : o = n;\n    const d = T(o, p, i);\n\n    if ('HTML' === o.nodeName && !C(p)) {\n      const _v = v(e.ownerDocument),\n            t = _v.height,\n            o = _v.width;\n\n      r.top += d.top - d.marginTop, r.bottom = t + d.top, r.left += d.left - d.marginLeft, r.right = o + d.left;\n    } else r = d;\n  }\n  o = o || 0;\n  const d = 'number' == typeof o;\n  return r.left += d ? o : o.left || 0, r.top += d ? o : o.top || 0, r.right -= d ? o : o.right || 0, r.bottom -= d ? o : o.bottom || 0, r;\n}\n\nfunction B({\n  width: e,\n  height: t\n}) {\n  return e * t;\n}\n\nfunction H(e, t, o, n, i, r = 0) {\n  if (-1 === e.indexOf('auto')) return e;\n  const p = P(o, n, r, i),\n        d = {\n    top: {\n      width: p.width,\n      height: t.top - p.top\n    },\n    right: {\n      width: p.right - t.right,\n      height: p.height\n    },\n    bottom: {\n      width: p.width,\n      height: p.bottom - t.bottom\n    },\n    left: {\n      width: t.left - p.left,\n      height: p.height\n    }\n  },\n        s = Object.keys(d).map(e => O({\n    key: e\n  }, d[e], {\n    area: B(d[e])\n  })).sort((e, t) => t.area - e.area),\n        f = s.filter(({\n    width: e,\n    height: t\n  }) => e >= o.clientWidth && t >= o.clientHeight),\n        a = 0 < f.length ? f[0].key : s[0].key,\n        l = e.split('-')[1];\n  return a + (l ? `-${l}` : '');\n}\n\nfunction W(e, t, o, n = null) {\n  const i = n ? N(t) : b(t, o);\n  return T(o, i, n);\n}\n\nfunction k(e) {\n  const t = e.ownerDocument.defaultView,\n        o = t.getComputedStyle(e),\n        n = parseFloat(o.marginTop || 0) + parseFloat(o.marginBottom || 0),\n        i = parseFloat(o.marginLeft || 0) + parseFloat(o.marginRight || 0),\n        r = {\n    width: e.offsetWidth + i,\n    height: e.offsetHeight + n\n  };\n  return r;\n}\n\nfunction A(e) {\n  const t = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return e.replace(/left|right|bottom|top/g, e => t[e]);\n}\n\nfunction M(e, t, o) {\n  o = o.split('-')[0];\n  const n = k(e),\n        i = {\n    width: n.width,\n    height: n.height\n  },\n        r = -1 !== ['right', 'left'].indexOf(o),\n        p = r ? 'top' : 'left',\n        d = r ? 'left' : 'top',\n        s = r ? 'height' : 'width',\n        f = r ? 'width' : 'height';\n  return i[p] = t[p] + t[s] / 2 - n[s] / 2, i[d] = o === d ? t[d] - n[f] : t[A(d)], i;\n}\n\nfunction F(e, t) {\n  return Array.prototype.find ? e.find(t) : e.filter(t)[0];\n}\n\nfunction I(e, t, o) {\n  if (Array.prototype.findIndex) return e.findIndex(e => e[t] === o);\n  const n = F(e, e => e[t] === o);\n  return e.indexOf(n);\n}\n\nfunction R(e, t, o) {\n  const n = void 0 === o ? e : e.slice(0, I(e, 'name', o));\n  return n.forEach(e => {\n    e['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    const o = e['function'] || e.fn;\n    e.enabled && d(o) && (t.offsets.popper = L(t.offsets.popper), t.offsets.reference = L(t.offsets.reference), t = o(t, e));\n  }), t;\n}\n\nfunction U() {\n  if (this.state.isDestroyed) return;\n  let e = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: !1,\n    offsets: {}\n  };\n  e.offsets.reference = W(this.state, this.popper, this.reference, this.options.positionFixed), e.placement = H(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets.popper = M(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute', e = R(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e));\n}\n\nfunction Y(e, t) {\n  return e.some(({\n    name: e,\n    enabled: o\n  }) => o && e === t);\n}\n\nfunction V(e) {\n  const t = [!1, 'ms', 'Webkit', 'Moz', 'O'],\n        o = e.charAt(0).toUpperCase() + e.slice(1);\n\n  for (let n = 0; n < t.length; n++) {\n    const i = t[n],\n          r = i ? `${i}${o}` : e;\n    if ('undefined' != typeof document.body.style[r]) return r;\n  }\n\n  return null;\n}\n\nfunction j() {\n  return this.state.isDestroyed = !0, Y(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '', this.popper.style.bottom = '', this.popper.style.willChange = '', this.popper.style[V('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;\n}\n\nfunction K(e) {\n  const t = e.ownerDocument;\n  return t ? t.defaultView : window;\n}\n\nfunction q(e, t, o, n) {\n  const i = 'BODY' === e.nodeName,\n        r = i ? e.ownerDocument.defaultView : e;\n  r.addEventListener(t, o, {\n    passive: !0\n  }), i || q(a(r.parentNode), t, o, n), n.push(r);\n}\n\nfunction z(e, t, o, n) {\n  o.updateBound = n, K(e).addEventListener('resize', o.updateBound, {\n    passive: !0\n  });\n  const i = a(e);\n  return q(i, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = i, o.eventsEnabled = !0, o;\n}\n\nfunction G() {\n  this.state.eventsEnabled || (this.state = z(this.reference, this.options, this.state, this.scheduleUpdate));\n}\n\nfunction _(e, t) {\n  return K(e).removeEventListener('resize', t.updateBound), t.scrollParents.forEach(e => {\n    e.removeEventListener('scroll', t.updateBound);\n  }), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t;\n}\n\nfunction X() {\n  this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = _(this.reference, this.state));\n}\n\nfunction J(e) {\n  return '' !== e && !isNaN(parseFloat(e)) && isFinite(e);\n}\n\nfunction Q(e, t) {\n  Object.keys(t).forEach(o => {\n    let n = '';\n    -1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(o) && J(t[o]) && (n = 'px'), e.style[o] = t[o] + n;\n  });\n}\n\nfunction Z(e, t) {\n  Object.keys(t).forEach(function (o) {\n    const n = t[o];\n    !1 === n ? e.removeAttribute(o) : e.setAttribute(o, t[o]);\n  });\n}\n\nfunction $(e) {\n  return Q(e.instance.popper, e.styles), Z(e.instance.popper, e.attributes), e.arrowElement && Object.keys(e.arrowStyles).length && Q(e.arrowElement, e.arrowStyles), e;\n}\n\nfunction ee(e, t, o, n, i) {\n  const r = W(i, t, e, o.positionFixed),\n        p = H(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding);\n  return t.setAttribute('x-placement', p), Q(t, {\n    position: o.positionFixed ? 'fixed' : 'absolute'\n  }), o;\n}\n\nfunction te(e, t) {\n  const _e$offsets = e.offsets,\n        o = _e$offsets.popper,\n        n = _e$offsets.reference,\n        i = Math.round,\n        r = Math.floor,\n        p = e => e,\n        d = i(n.width),\n        s = i(o.width),\n        f = -1 !== ['left', 'right'].indexOf(e.placement),\n        a = -1 !== e.placement.indexOf('-'),\n        l = t ? f || a || d % 2 == s % 2 ? i : r : p,\n        m = t ? i : p;\n\n  return {\n    left: l(1 == d % 2 && 1 == s % 2 && !a && t ? o.left - 1 : o.left),\n    top: m(o.top),\n    bottom: m(o.bottom),\n    right: l(o.right)\n  };\n}\n\nconst oe = e && /Firefox/i.test(navigator.userAgent);\n\nfunction ne(e, t) {\n  const o = t.x,\n        n = t.y,\n        i = e.offsets.popper,\n        r = F(e.instance.modifiers, e => 'applyStyle' === e.name).gpuAcceleration;\n  void 0 !== r && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  const p = void 0 === r ? t.gpuAcceleration : r,\n        d = c(e.instance.popper),\n        s = S(d),\n        f = {\n    position: i.position\n  },\n        a = te(e, 2 > window.devicePixelRatio || !oe),\n        l = 'bottom' === o ? 'top' : 'bottom',\n        m = 'right' === n ? 'left' : 'right',\n        h = V('transform');\n  let u, g;\n  if (g = 'bottom' == l ? 'HTML' === d.nodeName ? -d.clientHeight + a.bottom : -s.height + a.bottom : a.top, u = 'right' == m ? 'HTML' === d.nodeName ? -d.clientWidth + a.right : -s.width + a.right : a.left, p && h) f[h] = `translate3d(${u}px, ${g}px, 0)`, f[l] = 0, f[m] = 0, f.willChange = 'transform';else {\n    const e = 'bottom' == l ? -1 : 1,\n          t = 'right' == m ? -1 : 1;\n    f[l] = g * e, f[m] = u * t, f.willChange = `${l}, ${m}`;\n  }\n  const b = {\n    \"x-placement\": e.placement\n  };\n  return e.attributes = O({}, b, e.attributes), e.styles = O({}, f, e.styles), e.arrowStyles = O({}, e.offsets.arrow, e.arrowStyles), e;\n}\n\nfunction ie(e, t, o) {\n  const n = F(e, ({\n    name: e\n  }) => e === t),\n        i = !!n && e.some(e => e.name === o && e.enabled && e.order < n.order);\n\n  if (!i) {\n    const e = `\\`${t}\\``,\n          n = `\\`${o}\\``;\n    console.warn(`${n} modifier is required by ${e} modifier in order to work, be sure to include it before ${e}!`);\n  }\n\n  return i;\n}\n\nfunction re(e, t) {\n  if (!ie(e.instance.modifiers, 'arrow', 'keepTogether')) return e;\n  let o = t.element;\n\n  if ('string' == typeof o) {\n    if (o = e.instance.popper.querySelector(o), !o) return e;\n  } else if (!e.instance.popper.contains(o)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e;\n\n  const n = e.placement.split('-')[0],\n        _e$offsets2 = e.offsets,\n        i = _e$offsets2.popper,\n        r = _e$offsets2.reference,\n        p = -1 !== ['left', 'right'].indexOf(n),\n        d = p ? 'height' : 'width',\n        f = p ? 'Top' : 'Left',\n        a = f.toLowerCase(),\n        l = p ? 'left' : 'top',\n        m = p ? 'bottom' : 'right',\n        h = k(o)[d];\n  r[m] - h < i[a] && (e.offsets.popper[a] -= i[a] - (r[m] - h)), r[a] + h > i[m] && (e.offsets.popper[a] += r[a] + h - i[m]), e.offsets.popper = L(e.offsets.popper);\n  const c = r[a] + r[d] / 2 - h / 2,\n        u = s(e.instance.popper),\n        g = parseFloat(u[`margin${f}`], 10),\n        b = parseFloat(u[`border${f}Width`], 10);\n  let w = c - e.offsets.popper[a] - g - b;\n  return w = Math.max(Math.min(i[d] - h, w), 0), e.arrowElement = o, e.offsets.arrow = {\n    [a]: Math.round(w),\n    [l]: ''\n  }, e;\n}\n\nfunction pe(e) {\n  if ('end' === e) return 'start';\n  return 'start' === e ? 'end' : e;\n}\n\nvar de = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nconst se = de.slice(3);\n\nfunction fe(e, t = !1) {\n  const o = se.indexOf(e),\n        n = se.slice(o + 1).concat(se.slice(0, o));\n  return t ? n.reverse() : n;\n}\n\nconst ae = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\nfunction le(e, t) {\n  if (Y(e.instance.modifiers, 'inner')) return e;\n  if (e.flipped && e.placement === e.originalPlacement) return e;\n  const o = P(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed);\n  let n = e.placement.split('-')[0],\n      i = A(n),\n      r = e.placement.split('-')[1] || '',\n      p = [];\n\n  switch (t.behavior) {\n    case ae.FLIP:\n      p = [n, i];\n      break;\n\n    case ae.CLOCKWISE:\n      p = fe(n);\n      break;\n\n    case ae.COUNTERCLOCKWISE:\n      p = fe(n, !0);\n      break;\n\n    default:\n      p = t.behavior;\n  }\n\n  return p.forEach((d, s) => {\n    if (n !== d || p.length === s + 1) return e;\n    n = e.placement.split('-')[0], i = A(n);\n    const f = e.offsets.popper,\n          a = e.offsets.reference,\n          l = Math.floor,\n          m = 'left' === n && l(f.right) > l(a.left) || 'right' === n && l(f.left) < l(a.right) || 'top' === n && l(f.bottom) > l(a.top) || 'bottom' === n && l(f.top) < l(a.bottom),\n          h = l(f.left) < l(o.left),\n          c = l(f.right) > l(o.right),\n          u = l(f.top) < l(o.top),\n          g = l(f.bottom) > l(o.bottom),\n          b = 'left' === n && h || 'right' === n && c || 'top' === n && u || 'bottom' === n && g,\n          w = -1 !== ['top', 'bottom'].indexOf(n),\n          y = !!t.flipVariations && (w && 'start' === r && h || w && 'end' === r && c || !w && 'start' === r && u || !w && 'end' === r && g),\n          E = !!t.flipVariationsByContent && (w && 'start' === r && c || w && 'end' === r && h || !w && 'start' === r && g || !w && 'end' === r && u),\n          x = y || E;\n    (m || b || x) && (e.flipped = !0, (m || b) && (n = p[s + 1]), x && (r = pe(r)), e.placement = n + (r ? '-' + r : ''), e.offsets.popper = O({}, e.offsets.popper, M(e.instance.popper, e.offsets.reference, e.placement)), e = R(e.instance.modifiers, e, 'flip'));\n  }), e;\n}\n\nfunction me(e) {\n  const _e$offsets3 = e.offsets,\n        t = _e$offsets3.popper,\n        o = _e$offsets3.reference,\n        n = e.placement.split('-')[0],\n        i = Math.floor,\n        r = -1 !== ['top', 'bottom'].indexOf(n),\n        p = r ? 'right' : 'bottom',\n        d = r ? 'left' : 'top',\n        s = r ? 'width' : 'height';\n  return t[p] < i(o[d]) && (e.offsets.popper[d] = i(o[d]) - t[s]), t[d] > i(o[p]) && (e.offsets.popper[d] = i(o[p])), e;\n}\n\nfunction he(e, t, o, n) {\n  var i = Math.max;\n  const r = e.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/),\n        p = +r[1],\n        d = r[2];\n  if (!p) return e;\n\n  if (0 === d.indexOf('%')) {\n    let e;\n\n    switch (d) {\n      case '%p':\n        e = o;\n        break;\n\n      case '%':\n      case '%r':\n      default:\n        e = n;\n    }\n\n    const i = L(e);\n    return i[t] / 100 * p;\n  }\n\n  if ('vh' === d || 'vw' === d) {\n    let e;\n    return e = 'vh' === d ? i(document.documentElement.clientHeight, window.innerHeight || 0) : i(document.documentElement.clientWidth, window.innerWidth || 0), e / 100 * p;\n  }\n\n  return p;\n}\n\nfunction ce(e, t, o, n) {\n  const i = [0, 0],\n        r = -1 !== ['right', 'left'].indexOf(n),\n        p = e.split(/(\\+|\\-)/).map(e => e.trim()),\n        d = p.indexOf(F(p, e => -1 !== e.search(/,|\\s/)));\n  p[d] && -1 === p[d].indexOf(',') && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  const s = /\\s*,\\s*|\\s+/;\n  let f = -1 === d ? [p] : [p.slice(0, d).concat([p[d].split(s)[0]]), [p[d].split(s)[1]].concat(p.slice(d + 1))];\n  return f = f.map((e, n) => {\n    const i = (1 === n ? !r : r) ? 'height' : 'width';\n    let p = !1;\n    return e.reduce((e, t) => '' === e[e.length - 1] && -1 !== ['+', '-'].indexOf(t) ? (e[e.length - 1] = t, p = !0, e) : p ? (e[e.length - 1] += t, p = !1, e) : e.concat(t), []).map(e => he(e, i, t, o));\n  }), f.forEach((e, t) => {\n    e.forEach((o, n) => {\n      J(o) && (i[t] += o * ('-' === e[n - 1] ? -1 : 1));\n    });\n  }), i;\n}\n\nfunction ue(e, {\n  offset: t\n}) {\n  const o = e.placement,\n        _e$offsets4 = e.offsets,\n        n = _e$offsets4.popper,\n        i = _e$offsets4.reference,\n        r = o.split('-')[0];\n  let p;\n  return p = J(+t) ? [+t, 0] : ce(t, n, i, r), 'left' === r ? (n.top += p[0], n.left -= p[1]) : 'right' === r ? (n.top += p[0], n.left += p[1]) : 'top' === r ? (n.left += p[0], n.top -= p[1]) : 'bottom' === r && (n.left += p[0], n.top += p[1]), e.popper = n, e;\n}\n\nfunction ge(e, t) {\n  let o = t.boundariesElement || c(e.instance.popper);\n  e.instance.reference === o && (o = c(o));\n  const n = V('transform'),\n        i = e.instance.popper.style,\n        r = i.top,\n        p = i.left,\n        d = i[n];\n  i.top = '', i.left = '', i[n] = '';\n  const s = P(e.instance.popper, e.instance.reference, t.padding, o, e.positionFixed);\n  i.top = r, i.left = p, i[n] = d, t.boundaries = s;\n  const f = t.priority;\n  let a = e.offsets.popper;\n  const l = {\n    primary(e) {\n      let o = a[e];\n      return a[e] < s[e] && !t.escapeWithReference && (o = Math.max(a[e], s[e])), {\n        [e]: o\n      };\n    },\n\n    secondary(e) {\n      const o = 'right' === e ? 'left' : 'top';\n      let n = a[o];\n      return a[e] > s[e] && !t.escapeWithReference && (n = Math.min(a[o], s[e] - ('right' === e ? a.width : a.height))), {\n        [o]: n\n      };\n    }\n\n  };\n  return f.forEach(e => {\n    const t = -1 === ['left', 'top'].indexOf(e) ? 'secondary' : 'primary';\n    a = O({}, a, l[t](e));\n  }), e.offsets.popper = a, e;\n}\n\nfunction be(e) {\n  const t = e.placement,\n        o = t.split('-')[0],\n        n = t.split('-')[1];\n\n  if (n) {\n    const _e$offsets5 = e.offsets,\n          t = _e$offsets5.reference,\n          i = _e$offsets5.popper,\n          r = -1 !== ['bottom', 'top'].indexOf(o),\n          p = r ? 'left' : 'top',\n          d = r ? 'width' : 'height',\n          s = {\n      start: {\n        [p]: t[p]\n      },\n      end: {\n        [p]: t[p] + t[d] - i[d]\n      }\n    };\n    e.offsets.popper = O({}, i, s[n]);\n  }\n\n  return e;\n}\n\nfunction we(e) {\n  if (!ie(e.instance.modifiers, 'hide', 'preventOverflow')) return e;\n  const t = e.offsets.reference,\n        o = F(e.instance.modifiers, e => 'preventOverflow' === e.name).boundaries;\n\n  if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) {\n    if (!0 === e.hide) return e;\n    e.hide = !0, e.attributes['x-out-of-boundaries'] = '';\n  } else {\n    if (!1 === e.hide) return e;\n    e.hide = !1, e.attributes['x-out-of-boundaries'] = !1;\n  }\n\n  return e;\n}\n\nfunction ye(e) {\n  const t = e.placement,\n        o = t.split('-')[0],\n        _e$offsets6 = e.offsets,\n        n = _e$offsets6.popper,\n        i = _e$offsets6.reference,\n        r = -1 !== ['left', 'right'].indexOf(o),\n        p = -1 === ['top', 'left'].indexOf(o);\n  return n[r ? 'left' : 'top'] = i[o] - (p ? n[r ? 'width' : 'height'] : 0), e.placement = A(t), e.offsets.popper = L(n), e;\n}\n\nvar Ee = {\n  shift: {\n    order: 100,\n    enabled: !0,\n    fn: be\n  },\n  offset: {\n    order: 200,\n    enabled: !0,\n    fn: ue,\n    offset: 0\n  },\n  preventOverflow: {\n    order: 300,\n    enabled: !0,\n    fn: ge,\n    priority: ['left', 'right', 'top', 'bottom'],\n    padding: 5,\n    boundariesElement: 'scrollParent'\n  },\n  keepTogether: {\n    order: 400,\n    enabled: !0,\n    fn: me\n  },\n  arrow: {\n    order: 500,\n    enabled: !0,\n    fn: re,\n    element: '[x-arrow]'\n  },\n  flip: {\n    order: 600,\n    enabled: !0,\n    fn: le,\n    behavior: 'flip',\n    padding: 5,\n    boundariesElement: 'viewport',\n    flipVariations: !1,\n    flipVariationsByContent: !1\n  },\n  inner: {\n    order: 700,\n    enabled: !1,\n    fn: ye\n  },\n  hide: {\n    order: 800,\n    enabled: !0,\n    fn: we\n  },\n  computeStyle: {\n    order: 850,\n    enabled: !0,\n    fn: ne,\n    gpuAcceleration: !0,\n    x: 'bottom',\n    y: 'right'\n  },\n  applyStyle: {\n    order: 900,\n    enabled: !0,\n    fn: $,\n    onLoad: ee,\n    gpuAcceleration: void 0\n  }\n},\n    xe = {\n  placement: 'bottom',\n  positionFixed: !1,\n  eventsEnabled: !0,\n  removeOnDestroy: !1,\n  onCreate: () => {},\n  onUpdate: () => {},\n  modifiers: Ee\n};\n\nclass ve {\n  constructor(e, t, o = {}) {\n    this.scheduleUpdate = () => requestAnimationFrame(this.update), this.update = p(this.update.bind(this)), this.options = O({}, ve.Defaults, o), this.state = {\n      isDestroyed: !1,\n      isCreated: !1,\n      scrollParents: []\n    }, this.reference = e && e.jquery ? e[0] : e, this.popper = t && t.jquery ? t[0] : t, this.options.modifiers = {}, Object.keys(O({}, ve.Defaults.modifiers, o.modifiers)).forEach(e => {\n      this.options.modifiers[e] = O({}, ve.Defaults.modifiers[e] || {}, o.modifiers ? o.modifiers[e] : {});\n    }), this.modifiers = Object.keys(this.options.modifiers).map(e => O({\n      name: e\n    }, this.options.modifiers[e])).sort((e, t) => e.order - t.order), this.modifiers.forEach(e => {\n      e.enabled && d(e.onLoad) && e.onLoad(this.reference, this.popper, this.options, e, this.state);\n    }), this.update();\n    const n = this.options.eventsEnabled;\n    n && this.enableEventListeners(), this.state.eventsEnabled = n;\n  }\n\n  update() {\n    return U.call(this);\n  }\n\n  destroy() {\n    return j.call(this);\n  }\n\n  enableEventListeners() {\n    return G.call(this);\n  }\n\n  disableEventListeners() {\n    return X.call(this);\n  }\n\n}\n\nve.Utils = ('undefined' == typeof window ? global : window).PopperUtils, ve.placements = de, ve.Defaults = xe;\nexport default ve;","map":{"version":3,"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js"],"names":["timeoutDuration","i","longerTimeoutBrowsers","isBrowser","navigator","called","Promise","resolve","then","scheduled","supportsMicroTasks","window","functionToCheck","getType","element","nodeType","defaultView","css","property","host","document","body","nodeName","overflow","overflowX","overflowY","getStyleComputedProperty","getScrollParent","getParentNode","isIE11","isIE10","version","documentElement","noOffsetParent","isIE","offsetParent","getOffsetParent","node","getRoot","element1","element2","order","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","setStart","setEnd","commonAncestorContainer","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","parseInt","computedStyle","getComputedStyle","getSize","offsets","width","height","rect","result","sizes","getWindowSizes","horizScrollbar","vertScrollbar","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","getBoundingClientRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","offset","parentNode","isFixed","el","parentElement","boundaries","getFixedPositionOffsetParent","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","key","getArea","b","a","filteredAreas","computedPlacement","variation","commonOffsetParent","x","y","hash","matched","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","arr","findIndex","cur","match","find","obj","modifiersToRun","ends","modifiers","forEach","warn","fn","isFunction","data","reference","isDestroyed","getReferenceOffsets","computeAutoPlacement","originalPlacement","positionFixed","getPopperOffsets","position","runModifiers","state","isCreated","options","onCreate","onUpdate","name","enabled","prefixes","upperProp","length","prefix","toCheck","isModifierEnabled","removeAttribute","style","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","ownerDocument","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","removeEventListener","removeEventListeners","n","isNaN","isFinite","keys","prop","unit","isNumeric","value","attributes","setAttribute","arrowElement","arrowStyles","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","isFirefox","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","prefixedProperty","invertTop","invertLeft","arrow","requesting","isRequired","requested","isModifierRequired","len","sideCapitalized","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","validPlacements","placements","counter","index","BEHAVIORS","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flippedVariationByContent","flippedVariation","flipped","getOppositeVariation","split","str","size","useHeight","fragments","frag","divider","splitRegex","ops","mergeWithPrevious","op","toValue","index2","basePlacement","parseOffset","transformProp","popperStyles","priority","check","escapeWithReference","shiftvariation","shiftOffsets","bound","hide","subtractLength","Popper","update","debounce","Defaults","modifierOptions","onLoad","destroy","enableEventListeners","scheduleUpdate","requestAnimationFrame","PopperUtils"],"mappings":"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","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]},"metadata":{},"sourceType":"module"}